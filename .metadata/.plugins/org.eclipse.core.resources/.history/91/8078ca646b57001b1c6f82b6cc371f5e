package MavenPackage;

import java.io.IOException;
/*
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;*/
import java.util.concurrent.TimeUnit;

import org.apache.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import pageObjects.NetflixLoginPage;
import resources.ReusableFunctions;

public class Netflix_LoginValidation extends ReusableFunctions{
	public WebDriver driver;

	//	public static Logger log =LogManager.getLogger(base.class.getName());
	Logger log = Logger.getLogger(Netflix_LoginValidation.class);

	@BeforeTest
	public void initialize() throws IOException
	{

		driver =initializeDriver();

	}
	@Test(dataProvider="getData")

	public void basePageNavigation(String Username,String Password,String text) throws IOException
	{

		driver.get("https://www.netflix.com/login");
		driver.manage().window().maximize();
		NetflixLoginPage l=new NetflixLoginPage(driver);
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		System.out.println(Username);
		l.getUsername().sendKeys(Username); 
		l.getPassword().sendKeys(Password);
		l.Loginbtn().click();		
		//driver.close();
		driver.findElement(By.xpath("//*[@id=\"appMountPoint\"]/div/div[3]/div/div/div[1]/div/div[2]/a")).click();

		driver.findElement(By.xpath("//*[@id='id_email_hero_fuji']")).click();
	
		l.ForgotUsername().clear();
		l.ForgotUsername().sendKeys(text);
		if(l.ForgotUsername().isEnabled())
		{
			System.out.println("The reset Password functionality got validated successfully");
		}
		else
		{
			System.out.println("The reset Password functionality got failed");
		}
		driver.close();

	}	



	@AfterTest
	public void teardown()
	{

		driver.close();


	}


	@DataProvider
	public Object[][] getData()
	{
		// Row stands for how many different data types test should run
		//coloumn stands for how many values per each test

		// Array size is 2
		// 0,1
		Object[][] data=new Object[2][3];
		//0th row
		data[0][0]="pvarma@qw.com";
		data[0][1]="123456";
		data[0][2]="Restrcited User";
		//1st row
		data[1][0]="hvarma@qw.com";
		data[1][1]="456788";
		data[1][2]= "Non restricted user";

		return data;






	}

}
